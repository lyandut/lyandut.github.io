(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{622:function(t,s,a){"use strict";a.r(s);var n=a(12),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"从0-1背包问题开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从0-1背包问题开始"}},[t._v("#")]),t._v(" 从0-1背包问题开始")]),t._v(" "),a("blockquote",[a("p",[t._v("对于一组不同重量、不可分割的物品，我们需要选择一些装入背包，在满足背包最大重量限制的前提下，背包中物品总重量的最大值是多少呢？")])]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[t._v("引入物品价值这一变量。对于一组不同重量、不同价值、不可分割的物品，我们选择将某些物品装入背包，在满足背包最大重量限制的前提下，背包中可装入物品的总价值最大是多少呢？")])]),t._v(" "),a("h2",{attrs:{id:"动态规划理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态规划理论"}},[t._v("#")]),t._v(" 动态规划理论")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("“一个模型三个特征”理论")]),a("ul",[a("li",[t._v("一个模型：多阶段决策最优解模型")]),t._v(" "),a("li",[t._v("三个特征：最优子结构、无后效性、重复子问题")])])]),a("h3",{attrs:{id:"多阶段决策最优解模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多阶段决策最优解模型"}},[t._v("#")]),t._v(" 多阶段决策最优解模型")]),t._v(" "),a("p",[t._v("我们一般是用动态规划来解决最优化问题，而这类问题包含以下特点：")]),t._v(" "),a("ul",[a("li",[t._v("求解的过程需要经历多个决策阶段；")]),t._v(" "),a("li",[t._v("每个决策阶段都对应着一组状态；")]),t._v(" "),a("li",[t._v("问题的求解是要寻找一组决策序列，经过这组决策序列能够产生最终期望的最优值。")])]),t._v(" "),a("h3",{attrs:{id:"最优子结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最优子结构"}},[t._v("#")]),t._v(" 最优子结构")]),t._v(" "),a("p",[t._v("最优子结构指的是问题的最优解包含子问题的最优解。")]),t._v(" "),a("p",[t._v("结合多阶段决策最优解模型来说，就是后面阶段的状态可以通过前面阶段的状态推导出来。")]),t._v(" "),a("h3",{attrs:{id:"无后效性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无后效性"}},[t._v("#")]),t._v(" 无后效性")]),t._v(" "),a("p",[t._v("无后效性是一个非常“宽松”的要求，一般只要满足多阶段决策最优解模型，就会满足无后效性。")]),t._v(" "),a("p",[t._v("它有两层含义：")]),t._v(" "),a("ol",[a("li",[t._v("在推导后面阶段的状态的时候，我们只关心前面阶段的状态值，而不关心这个状态具体的推导过程。")]),t._v(" "),a("li",[t._v("某阶段状态一旦确定，就不受之后阶段的决策影响。")])]),t._v(" "),a("h3",{attrs:{id:"重复子问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复子问题"}},[t._v("#")]),t._v(" 重复子问题")]),t._v(" "),a("p",[t._v("不同的决策序列，到达某个相同的阶段时，可能会产生重复的状态。")]),t._v(" "),a("h2",{attrs:{id:"两种求解思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种求解思路"}},[t._v("#")]),t._v(" 两种求解思路")]),t._v(" "),a("h3",{attrs:{id:"状态转移表法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态转移表法"}},[t._v("#")]),t._v(" 状态转移表法")]),t._v(" "),a("p",[t._v("回溯算法实现 → 定义状态 → 画递归树 → 找重复子问题 → 画状态转移表 → 根据递推关系填表 → 将填表过程翻译成代码")]),t._v(" "),a("h3",{attrs:{id:"状态转移方程法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态转移方程法"}},[t._v("#")]),t._v(" 状态转移方程法")]),t._v(" "),a("p",[t._v("找最优子结构 → 写状态转移方程 → 将状态转移方程翻译成代码")]),t._v(" "),a("h2",{attrs:{id:"贪心、回溯、分治与动态规划的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪心、回溯、分治与动态规划的比较"}},[t._v("#")]),t._v(" 贪心、回溯、分治与动态规划的比较")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("贪心算法")]),t._v("实际上是动态规划算法的一种特殊情况。\n它需要满足“贪心选择性”，即通过每轮选择局部最优解，能产生全局最优解。")]),t._v(" "),a("li",[a("strong",[t._v("回溯算法")]),t._v("是个“万金油”，基本上能用的动态规划、贪心解决的问题，都可以用回溯算法解决。\n回溯算法相当于穷举搜索，所以时间复杂度非常高，是指数级别的；\n而回溯加“备忘录”的方法可以用来避免重复子问题，从执行效率上来讲跟动态规划没有差别。")]),t._v(" "),a("li",[a("strong",[t._v("分治算法")]),t._v("尽管也能解决最优化问题，但大部分都不能抽象成多阶段决策模型。")])]),t._v(" "),a("h2",{attrs:{id:"leetcode例题-120"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode例题-120"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.com/problems/triangle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode例题 120"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("Triangle（三角形最小路径和）")]),a("p",[t._v("思路：使用"),a("code",[t._v("O(n)")]),t._v("的额外空间（n为三角形的总行数），自下往上更新dp数组。")])]),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("minimumTotal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" triangle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("triangle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" triangle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" triangle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);